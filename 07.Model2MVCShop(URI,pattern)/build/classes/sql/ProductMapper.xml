<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">


	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" column="prod_No" jdbcType="NUMERIC" />
		<result property="prodName" column="prod_Name" jdbcType="VARCHAR" />
		<result property="prodDetail" column="prod_Detail" jdbcType="VARCHAR" />
		<result property="manuDate" column="manufacture_Day" jdbcType="VARCHAR" />
		<result property="price" column="price" jdbcType="NUMERIC" />
		<result property="fileName" column="image_File" jdbcType="VARCHAR" />
		<result property="regDate" column="reg_Date" jdbcType="DATE" />
	</resultMap>

	<!-- SQL : INSERT -->
	<insert id="addProduct" parameterType="product">
		INSERT
		INTO product
		VALUES (
		seq_product_prod_no.nextval , #{prodName:VARCHAR} ,
		#{prodDetail:VARCHAR} ,
		#{manuDate:VARCHAR} , #{price:NUMERIC} ,
		#{fileName:VARCHAR} , SYSDATE )
	</insert>

	<!-- SQL : SELECT ONE -->
	<select id="getProduct" parameterType="String" resultMap="productSelectMap">
		SELECT
		prod_No, prod_Name , prod_Detail , manufacture_Day , price ,
		image_File, reg_Date
		FROM product
		WHERE prod_No = #{value}
	</select>

	<!-- SQL : UPDATE -->
	<update id="updateProduct" parameterType="product">
		UPDATE product
		<set>
			prod_Name = #{prodName} ,
			prod_Detail = #{prodDetail},
			manufacture_Day = #{manuDate},
			price = #{price},
			image_File = #{fileName}						
		</set>
		WHERE prod_No = #{prodNo}
	</update>

	<!-- SQL : SELECT LIST -->
	<select id="getProductList" parameterType="search" resultMap="productSelectMap">
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
		FROM ( SELECT prod_No , prod_Name, prod_Detail, Price, manufacture_Day
		FROM product
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword != '' ">
					prod_No = #{searchKeyword}
				</if>
				<if test="searchCondition == 1 and searchKeyword != '' ">
					prod_Name = #{searchKeyword}
				</if>
				<if test="searchCondition == 2 and searchKeyword != '' ">
					price = #{searchKeyword}
				</if>
			</where>
		</if>
		ORDER BY prod_No ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE
		row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	<!-- 위 두번째 subQuery 의 WHERE ROWNUM &lt;= #{endRowNum} ) 는 WHERE ROWNUM <= 
		#{endRowNum} ) 의미이며.. < 는 keyword 로 &lt; 를 사용. <![CDATA[ ~~~ ]]> 를 이용하여 아래와 
		같이 사용 할 수 있다. CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리 WHERE ROWNUM 
		<![CDATA[ <=]]> #{endRowNum} ) -->
		
		<!-- SQL : SELECT ROW Count -->
	<select id="getTotalCount" parameterType="search" resultType="int">
		SELECT COUNT(*)
		FROM( SELECT prod_No , prod_name, prod_Detail
		FROM product
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword !='' ">
					prod_No = #{searchKeyword}
				</if>
				<if test="searchCondition == 1 and searchKeyword !='' ">
					prod_name = #{searchKeyword}
				</if>
			</where>
		</if>
		) countTable
	</select>
	<!-- 위 두번째 subQuery 의 WHERE ROWNUM &lt;= #{endRowNum} ) 는 WHERE ROWNUM <= 
		#{endRowNum} ) 의미이며.. < 는 keyword 로 &lt; 를 사용. <![CDATA[ ~~~ ]]> 를 이용하여 아래와 
		같이 사용 할 수 있다. CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리 WHERE ROWNUM 
		<![CDATA[ <=]]> #{endRowNum} ) -->

	<!-- SQL : SELECT ROW Count -->
	<delete id="removeProduct" parameterType="java.lang.String">
		DELETE FROM product WHERE prod_Name = #{value}
	</delete>

</mapper>